package com.catering.dao.order_reports.menu_allocation;

import java.time.LocalDateTime;
import java.util.List;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;

import com.catering.dto.tenant.request.ChefLabourSupplierWiseRawMaterialReportDto;
import com.catering.dto.tenant.request.ChefLabourWiseRawMaterialReportDto;
import com.catering.dto.tenant.request.CommonDataForDropDownDto;
import com.catering.dto.tenant.request.FunctionPerOrderDto;
import com.catering.dto.tenant.request.MenuAllocationDetailRawMaterialReportDto;
import com.catering.dto.tenant.request.MenuAllocationMenuItemWiseRawMaterialReportDto;
import com.catering.dto.tenant.request.MenuAllocationMenuWithQuantityAndWithOutQuantityReportDto;
import com.catering.dto.tenant.request.MenuAllocationSupplierWiseRawMaterialReportDto;
import com.catering.dto.tenant.request.RawMaterialCategoryDirectOrderDto;
import com.catering.dto.tenant.request.RawMaterialChithhiReportDto;
import com.catering.dto.tenant.request.RawMaterialDetailsDto;
import com.catering.dto.tenant.request.RawMaterialOrderFileReportDto;
import com.catering.dto.tenant.request.TotalRawMaterialReportDto;

/**
 * The `MenuAllocationReportQueryDao` interface defines data access methods for querying menu allocation reports.
 * It extends the JpaRepository interface for basic CRUD operations and includes custom queries for generating
 * item-wise raw material reports, retrieving item categories per order, and getting functions per order.
 *
 * This interface is used to interact with the database to retrieve report data for reporting purposes in the catering system.
 *
 * @author Krushali Talaviya
 * @since 2023-09-11
 */
public interface MenuAllocationReportQueryDao extends JpaRepository<MenuAllocationReportQuery, Long> {

	/**
	 * Generate an menu-item-wise raw material report for a specific order.
	 *
	 * @param orderId The unique identifier of the order.
	 * @param functionId (Optional) The ID of the function related to the report.
	 * @param rawMaterialCategoryId (Optional) The ID of the item category related to the report.
	 * @param langType (Optional) The language type for the report.
	 * @return A list of MenuAllocationItemWiseRawMaterialReportDto containing the generated raw material reports.
	 */
	@Query(name = "generateMenuItemWiseRawMaterialReport", nativeQuery = true)
	List<MenuAllocationMenuItemWiseRawMaterialReportDto> generateMenuItemWiseRawMaterialReport(Long orderId, List<Long> functionIds, List<Long> rawMaterialCategoryIds, Integer langType, String generalFixRawMaterial, Boolean isAdjustQuantity);

	/**
	 * Retrieve a list of item categories for a specific order.
	 *
	 * @param orderId The unique identifier of the order.
	 * @return A list of ItemCategoryInRawMaterialPerOrderDto containing item category information per order.
	 */
	@Query(name = "getItemCategoryPerOrder", nativeQuery = true)
	List<CommonDataForDropDownDto> getItemCategoryPerOrder(Long orderId);

	/**
	 * Retrieve a list of functions for a specific order.
	 *
	 * @param orderId The unique identifier of the order.
	 * @return A list of FunctionPerOrderDto containing function information per order.
	 */
	@Query(name = "getFunctionPerOrder", nativeQuery = true)
	List<FunctionPerOrderDto> getFunctionsPerOrder(Long orderId);

	/**
	 * Generates a total raw material report based on the specified parameters.
	 * The report is generated by executing a native SQL query.
	 * 
	 * @param orderId The ID of the order for which the report is generated.
	 * @param isDateTime The identifier of date and time when to display date with time or only date.
	 * @param functionId The ID of the function related to the report.
	 * @param rawMaterialCategoryId The ID of the item category used to filter the report.
	 * @param langType The language type used for report generation.
	 * @return A list of MenuAllocationTotalRawMaterialReportDto objects containing raw material information.
	 */
	@Query(name = "generateDetailedRawMaterialReport", nativeQuery = true)
	List<MenuAllocationDetailRawMaterialReportDto> generateDetailRawMaterialReport(Long orderId, Boolean isDateTime, LocalDateTime orderDate, List<Long> functionIds, Long count, List<Long> rawMaterialCategoryIds, Integer langType, String morning, String noon, String evening, String night, String timeZone, Boolean isAdjustQuantity);

	/**
	 * Generates a raw material list report based on the specified parameters.
	 * The report is generated by executing a native SQL query.
	 * 
	 * @param orderId The ID of the order for which the report is generated.
	 * @param isDateTime The identifier of date and time when to display date with time or only date.
	 * @param functionId The ID of the function related to the report.
	 * @param rawMaterialCategoryId The ID of the item category used to filter the report.
	 * @param langType The language type used for report generation.
	 * @return A list of RawMaterialListReportDto objects containing raw material information.
	 */
	@Query(name = "generateTotalRawMaterialReport", nativeQuery = true)
	List<TotalRawMaterialReportDto> generateTotalRawMaterialReport(Long orderId, Boolean isDateTime, LocalDateTime orderDate, List<Long> functionIds, Long count, List<Long> rawMaterialCategoryIds, Integer langType, Boolean isAdjustQuantity);

	/**
	 * Generates a Chef Labour-wise raw material report for a specified order with various filters.
	 *
	 * @param orderId The unique identifier of the order for which the report is generated.
	 * @param isDateTime The identifier of date and time when to display date with time or only date.
	 * @param orderDate The date and time of the order.
	 * @param orderTypeIds A list of order type IDs to filter the report.
	 * @param contactIds A list of contact IDs to filter the report.
	 * @param functionIds A list of function IDs to filter the report.
	 * @param count The count of items in the report.
	 * @param rawMaterialCategoryIds A list of raw material category IDs to filter the report.
	 * @param menuItemIds A list of menu item IDs to filter the report.
	 * @param langType The language type for the report.
	 * @param isAdjustQuantity A flag to adjust quantities in the report.
	 * @return A list of {@link ChefLabourWiseRawMaterialReportDto} containing the chef labour-wise raw material report data.
	 */
	@Query(name = "generateChefLabourWiseRawMaterialReport", nativeQuery = true)
	List<ChefLabourWiseRawMaterialReportDto> generateChefLabourWiseRawMaterialReport(Long orderId, Boolean isDateTime, LocalDateTime orderDate, List<Long> orderTypeIds, List<Long> contactIds, List<Long> functionIds, Long count, List<Long> rawMaterialCategoryIds, List<Long> menuItemIds, Integer langType, Boolean isAdjustQuantity);

	/**
	 * Generates a Chef Labour Supplier-wise raw material report for a specified order with various filters.
	 *
	 * @param orderId The unique identifier of the order for which the report is generated.
	 * @param isDateTime The identifier of date and time when to display date with time or only date.
	 * @param orderDate The date and time of the order.
	 * @param orderTypeIds A list of order type IDs to filter the report.
	 * @param contactIds A list of contact IDs to filter the report.
	 * @param functionIds A list of function IDs to filter the report.
	 * @param count The count of items in the report.
	 * @param rawMaterialCategoryIds A list of raw material category IDs to filter the report.
	 * @param menuItemIds A list of menu item IDs to filter the report.
	 * @param langType The language type for the report.
	 * @param isAdjustQuantity A flag to adjust quantities in the report.
	 * @return A list of {@link ChefLabourSupplierWiseRawMaterialReportDto} containing the chef labour supplier-wise raw material report data.
	 */
	@Query(name = "generateChefLabourSupplierWiseRawMaterialReport", nativeQuery = true)
	List<ChefLabourSupplierWiseRawMaterialReportDto> generateChefLabourSupplierWiseRawMaterialReport(Long orderId, Boolean isDateTime, LocalDateTime orderDate, List<Long> orderTypeIds, List<Long> contactIds, List<Long> functionIds, Long count, List<Long> rawMaterialCategoryIds, List<Long> menuItemIds, Integer langType, Boolean isAdjustQuantity);

	/**
	 * Generates a Total Raw Material report for elite caterers for a specified order with various filters.
	 *
	 * @param orderId The unique identifier of the order for which the report is generated.
	 * @param isDateTime The identifier of date and time when to display date with time or only date.
	 * @param orderDate The date and time of the order.
	 * @param functionIds A list of function IDs to filter the report.
	 * @param count The count of items in the report.
	 * @param rawMaterialCategoryIds A list of raw material category IDs to filter the report.
	 * @param langType The language type for the report.
	 * @param isAdjustQuantity A flag to adjust quantities in the report.
	 * @return A list of {@link TotalRawMaterialReportDto} containing the total raw material report data for elite caterers.
	 */
	@Query(name = "generateEliteCaterersTotalRawMaterialReport", nativeQuery = true)
	List<TotalRawMaterialReportDto> generateEliteCaterersTotalRawMaterialReport(Long orderId, Boolean isDateTime, LocalDateTime orderDate, List<Long> functionIds, Long count, List<Long> rawMaterialCategoryIds, Integer langType, Boolean isAdjustQuantity);

	/**
	 * Generates a menu report with quantity information based on the given order ID and language type.
	 *
	 * @param orderI  The unique identifier of the order for which the report is generated.
	 * @param langType The language type (e.g., 1 for English, 2 for Spanish) used for localization.
	 * @return A list of MenuAllocationMenuWithQuantityAndWithOutQuantityReportDto objects containing menu and quantity information.
	 */
	@Query(name = "generateMenuWithAndWithOutQuantityReport", nativeQuery = true)
	List<MenuAllocationMenuWithQuantityAndWithOutQuantityReportDto> generateMenuWithAndWithOutQuantityReport(Long orderId, List<Long> functionIds, Integer langType);

	/**
	 * Generates a supplier-wise raw material report based on the provided order ID and language type.
	 *
	 * This method executes a native SQL query to retrieve supplier-wise raw material report data for a specific order and language type.
	 * It returns a list of {@link MenuAllocationSupplierWiseRawMaterialReportDto} objects containing the report information.
	 *
	 * @param orderId The ID of the order for which the report is generated.
	 * @param langType The language type (e.g., 1 for English, 2 for another language).
	 * @return A list of {@link MenuAllocationSupplierWiseRawMaterialReportDto} objects representing the supplier-wise raw material report.
	 */
	@Query(name = "generateSupplierWiseRawMaterialReport", nativeQuery = true)
	List<MenuAllocationSupplierWiseRawMaterialReportDto> generateSupplierWiseRawMaterialReport(Long orderId, Integer langType, List<Long> contactIds, List<Long> rawMaterialCategoryIds, Boolean isAdjustQuantity);

	/**
	 * Generates a raw material allocation report for supplier categories for a specified order.
	 *
	 * @param orderId The unique identifier of the order for which the report is generated.
	 * @return A list of {@link CommonDataForDropDownDto} containing the raw material allocation supplier categories for the order.
	 */
	@Query(name = "generateRawMaterialAllocationSupplierCategory", nativeQuery = true)
	List<CommonDataForDropDownDto> generateRawMaterialAllocationSupplierCategory(Long orderId);

	/**
	 * Generates an order file report with various filters for a specified order.
	 *
	 * @param orderId The unique identifier of the order for which the report is generated.
	 * @param functionIds A list of function IDs to filter the report.
	 * @param rawMaterialCategoryIds A list of raw material category IDs to filter the report.
	 * @param dataTypeIds A list of data type IDs to filter the report.
	 * @param langType The language type for the report.
	 * @param isAdjustQuantity A flag to adjust quantities in the report.
	 * @return A list of {@link RawMaterialOrderFileReportDto} containing the order file report data.
	 */
	@Query(name = "generateOrderFileReport", nativeQuery = true)
	List<RawMaterialOrderFileReportDto> generateOrderFileReport(Long orderId, List<Long> functionIds, List<Long> rawMaterialCategoryIds, List<Long> dataTypeIds, Integer langType, Boolean isAdjustQuantity);

	/**
	 * Generates a Chithhi report for a specified order with various filters.
	 *
	 * @param orderId The unique identifier of the order for which the report is generated.
	 * @param functionIds A list of function IDs to filter the report.
	 * @param rawMaterialCategoryIds A list of raw material category IDs to filter the report.
	 * @param langType The language type for the report.
	 * @param morning The morning time slot information for the report.
	 * @param noon The noon time slot information for the report.
	 * @param evening The evening time slot information for the report.
	 * @param night The night time slot information for the report.
	 * @param timeZone The time zone for the report.
	 * @param isAdjustQuantity A flag to adjust quantities in the report.
	 * @return A list of {@link RawMaterialChithhiReportDto} containing the Chithhi report data for the order.
	 */
	@Query(name = "generateChithhiReport", nativeQuery = true)
	List<RawMaterialChithhiReportDto> generateChithhiReport(Long orderId, List<Long> functionIds, List<Long> rawMaterialCategoryIds, Integer langType, String morning, String noon, String evening, String night, String timeZone, Boolean isAdjustQuantity);

	/**
	 * Finds the raw material categories for a direct order by the specified order ID.
	 *
	 * @param orderId The unique identifier of the order for which the raw material categories are retrieved.
	 * @return A list of {@link RawMaterialCategoryDirectOrderDto} containing the raw material categories for the direct order.
	 */
	@Query(name = "findRawMaterialCategoriesByDirectOrderAndOrderId", nativeQuery = true)
	List<RawMaterialCategoryDirectOrderDto> findRawMaterialCategoriesByDirectOrderAndOrderId(Long orderId);

	/**
	 * Finds the selected chef labour agency for a specified order.
	 *
	 * @param orderId The unique identifier of the order for which the selected chef labour agency is retrieved.
	 * @return A list of {@link CommonDataForDropDownDto} containing the selected chef labour agencies for the order.
	 */
	@Query(name = "findSelectedChefLabourAgency", nativeQuery = true)
	List<CommonDataForDropDownDto> findSelectedChefLabourAgency(Long orderId);

	/**
	 * Finds all menu items for a specified order.
	 *
	 * @param orderId The unique identifier of the order for which the menu items are retrieved.
	 * @return A list of {@link CommonDataForDropDownDto} containing the menu items for the order.
	 */
	@Query(name = "findAllMenuItemsByOrderId", nativeQuery = true)
	List<CommonDataForDropDownDto> findAllMenuItemsByOrderId(Long orderId);

	/**
	 * Retrieves raw material details based on the provided menu item and raw  material ID.
	 * @param menuPreparationMenuItemId The unique identifier of the menu item in the menu preparation.
	 * @param rawMaterialId The unique identifier of the raw material.
	 * @return A {@link RawMaterialDetailsDto} containing the details of the raw material for the specified menu item.
	 */
	@Query(name = "findRawMaterialByMenuItemAndRawMaterialId", nativeQuery = true)
	RawMaterialDetailsDto findRawMaterialByMenuItemAndRawMaterialId(@Param("menuPreparationMenuItemId") Long menuPreparationMenuItemId, @Param("rawMaterialId") Long rawMaterialId);

	/**
	 * Retrieves general fixed raw material details based on the function and raw material ID.
	 *
	 * @param orderFunctionId The unique identifier of the function in the order.
	 * @param rawMaterialId   The unique identifier of the raw material.
	 * @return A {@link RawMaterialDetailsDto} containing the details of the fixed raw material for the specified function.
	 */
	@Query(name = "findRawMaterialByFunctionAndRawMaterialId", nativeQuery = true)
	RawMaterialDetailsDto findRawMaterialByFunctionAndRawMaterialId(@Param("orderFunctionId") Long orderFunctionId, @Param("rawMaterialId") Long rawMaterialId);

}